apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.asidarau.wtracker"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests.includeAndroidResources = true
    }
}

ext {
    work_manager_version = "1.0.0-alpha11"
    appcompat_version = "1.0.2"
    material_version = "1.0.0"
    constraint_version = "1.1.3"
    room_version = "2.0.0"
    lifecycle_version = "2.0.0"
    retrofit_version = "2.5.0"
    okhttp_version = "3.12.0"

    junit_version = "4.12"
    test_core_version = "1.0.0"
    test_runner_version = "1.1.0"
    espresso_version = "3.1.0"
    mockito_version = "2.13.0"
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_version"
    implementation "com.google.android.material:material:$material_version"

    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    testImplementation "com.squareup.okhttp3:mockwebserver:$okhttp_version"

    testImplementation "junit:junit:$junit_version"
    testImplementation "androidx.test:runner:$test_runner_version"
    testImplementation "androidx.test.ext:junit:$test_core_version"
    testImplementation "androidx.test:core:$test_core_version"
    testImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    testImplementation "org.mockito:mockito-core:$mockito_version"
    testImplementation 'org.robolectric:robolectric:4.0.2'

    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    testImplementation "androidx.arch.core:core-testing:$lifecycle_version"

    implementation "android.arch.work:work-runtime:$work_manager_version"
    testImplementation "android.arch.work:work-testing:$work_manager_version"

    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    testImplementation "androidx.room:room-testing:$room_version"

    implementation "androidx.lifecycle:lifecycle-runtime:$lifecycle_version"
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
}
